# swagger.yml

openapi: "3.0.0"
info:
  title: "Coastal Marine REST API"
  description: "Coastal Marine Data API"
  version: "1.0"

servers:
  - url: "/api/v1"

components:
  schemas:
    Station:
      type: "object"
      required:
        - name

      properties:
        name:
          type: string
        desc:
          type: string
        uuid:
          type: string
        lat:
          type: number
        lon:
          type: number
        alt:
          type: number
        datetime:
          type: string
        sensors:
          type: array

    Sensor:
      type: "object"
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        uuid:
          type: string
        parent_station_uuid:
          type: string
        lat:
          type: number
        lon:
          type: number
        alt:
          type: number
        sensor_type:
          type: string
        sensor_make:
          type: string
        sensor_model:
          type: string
        sensor_units:
          type: string
        datetime:
          type: string
        observations:
          type: array

    Observation:
      type: "object"
      required:
        - name

      properties:
        name:
          type: string
        description:
          type: string
        uuid:
          type: string
        parent_sensor_uuid:
          type: string
        lat:
          type: number
        lon:
          type: number
        altitude:
          type: number
        stationary:
          type: boolean
        sensor_type:
          type: string
        sensor_units:
          type: string
        datetime:
          type: string
           
  parameters:
    name:
      name: "name"
      description: "Name of the station to get"
      in: path
      required: True
      schema:
        type: string

paths:
  /stations:
    get:
      operationId: "station.read_all"
      tags:
        - "Station"
      summary: "Read the list of stations"
      responses:
        "200":
          description: "Successfully read station list"
    post:
      operationId: "station.create"
      tags:
        - Station
      summary: "Create a station"
      requestBody:
          description: "Station to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "station"
                $ref: "#/components/schemas/Station"
      responses:
        "201":
          description: "Successfully created station"
  /stations/{name}:
    get:
      operationId: "station.read_one"
      tags:
        - Station
      summary: "Read one station"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          description: "Successfully read station"
    put:
      tags:
        - Station
      operationId: "station.update"
      summary: "Update a station"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          description: "Successfully updated station"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "station"
              $ref: "#/components/schemas/Station"
    delete:
      tags:
        - Station
      operationId: "station.delete"
      summary: "Delete a station"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "204":
          description: "Successfully deleted station"

  /sensors:
    get:
      operationId: "sensor.read_all"
      tags:
        - "Sensor"
      summary: "Read the list of sensors"
      responses:
        "200":
          description: "Successfully read sensor list"
    post:
      operationId: "sensor.create"
      tags:
        - Sensor
      summary: "Create a sensor"
      requestBody:
          description: "Sensor to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "sensor"
                $ref: "#/components/schemas/Sensor"
      responses:
        "201":
          description: "Successfully created sensor"
  /sensors/{name}:
    get:
      operationId: "sensor.read_one"
      tags:
        - Sensor
      summary: "Read one sensor"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          description: "Successfully read sensor"
    put:
      tags:
        - Sensor
      operationId: "sensor.update"
      summary: "Update a sensor"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          description: "Successfully updated sensor"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "sensor"
              $ref: "#/components/schemas/Sensor"
    delete:
      tags:
        - Sensor
      operationId: "sensor.delete"
      summary: "Delete a sensor"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "204":
          description: "Successfully deleted sensor"

  /observations:
    get:
      operationId: "observation.read_all"
      tags:
        - "Observations"
      summary: "Read the list of observations"
      responses:
        "200":
          description: "Successfully read observation list"
    post:
      operationId: "observation.create"
      tags:
        - Observations
      summary: "Create a observation"
      requestBody:
          description: "Observations to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "observation"
                $ref: "#/components/schemas/Observation"
      responses:
        "201":
          description: "Successfully created observation"
  /observations/{name}:
    get:
      operationId: "observation.read_one"
      tags:
        - Observations
      summary: "Read one observation"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          description: "Successfully read observation"
    put:
      tags:
        - Observations
      operationId: "observation.update"
      summary: "Update a observation"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          description: "Successfully updated observation"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "observation"
              $ref: "#/components/schemas/Observation"
    delete:
      tags:
        - Observations
      operationId: "observation.delete"
      summary: "Delete a observation"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "204":
          description: "Successfully deleted observation"